-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Gql.Swapi.Interface.Node exposing (..)

import Gql.Swapi.InputObject
import Gql.Swapi.Interface
import Gql.Swapi.Object
import Gql.Swapi.Scalar
import Gql.Swapi.ScalarCodecs
import Gql.Swapi.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (FragmentSelectionSet(..), SelectionSet(..))
import Json.Decode as Decode


type alias Fragments decodesTo =
    { onFilm : SelectionSet decodesTo Gql.Swapi.Object.Film
    , onSpecies : SelectionSet decodesTo Gql.Swapi.Object.Species
    , onPlanet : SelectionSet decodesTo Gql.Swapi.Object.Planet
    , onPerson : SelectionSet decodesTo Gql.Swapi.Object.Person
    , onStarship : SelectionSet decodesTo Gql.Swapi.Object.Starship
    , onVehicle : SelectionSet decodesTo Gql.Swapi.Object.Vehicle
    }


{-| Build an exhaustive selection of type-specific fragments.
-}
fragments :
    Fragments decodesTo
    -> SelectionSet decodesTo Gql.Swapi.Interface.Node
fragments selections =
    Object.exhaustiveFragmentSelection
        [ Object.buildFragment "Film" selections.onFilm
        , Object.buildFragment "Species" selections.onSpecies
        , Object.buildFragment "Planet" selections.onPlanet
        , Object.buildFragment "Person" selections.onPerson
        , Object.buildFragment "Starship" selections.onStarship
        , Object.buildFragment "Vehicle" selections.onVehicle
        ]


{-| Can be used to create a non-exhaustive set of fragments by using the record
update syntax to add `SelectionSet`s for the types you want to handle.
-}
maybeFragments : Fragments (Maybe decodesTo)
maybeFragments =
    { onFilm = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onSpecies = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onPlanet = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onPerson = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onStarship = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onVehicle = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    }


{-| The id of the object.
-}
id : SelectionSet Gql.Swapi.ScalarCodecs.Id Gql.Swapi.Interface.Node
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Gql.Swapi.ScalarCodecs.codecs |> Gql.Swapi.Scalar.unwrapCodecs |> .codecId |> .decoder)
